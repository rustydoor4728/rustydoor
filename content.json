{"posts":[{"title":"Hexo","text":"Hexo 사용 시 주의사항New post 작성1$ hexo new post &quot;new post name&quot; Generate1$ hexo generate 1$ hexo g 수정한 layout JSX 와 추가/삭제 된 markdown 을 바탕으로 새로운 정적 파일을 생성합니다 DeployDeploy 명령어를 사용하지 않고, public 폴더를 remote repository 에 push 하는 것으로 deploy 합니다 Server1$ hexo server 1$ hexo s generate 된 결과물을 localhost:4000 에서 확인 가능합니다 매번 수정 후 generate 해주어야 로컬 서버에서 확인 가능합니다 Clean1$ hexo clean Hexo는 둘 이상의 PC 환경에서 작업하는 것이 어렵습니다 Theme 및 Layout JSX가 포함된 Hexo repository 와 Post 를 포함하여 build된 Public repository를 나누어 설정하였습니다 Hexo clean 명령은 Public 폴더를 삭제합니다 디자인 수정을 적용하기 위해서는 public 폴더의 .git 폴더를 백업 후 clean 하고 generate 한 뒤 다시 생성된 public 폴더에 백업한 .git 폴더를 넣고 remote respository에 commit, push 합니다 디자인 수정 없이 새로운 markdown post만 추가한다면, generate 후 바로 commit, push 하여 배포합니다","link":"/rustydoor/2023/01/07/Hexo/"},{"title":"Git 명령어","text":"git git command BranchBranch 생성git branch [생성할 branch 이름] [분기해 나올 branch 이름] 12git branch develop maingit branch feature/profile develop Branch 이름 바꾸기git branch -m [branch 이름] [새로운 branch 이름] 1git branch -m feature/profile feature/profile/test Branch 삭제remote repository branch 삭제 후 rocal repository 삭제 git push origin --delete [remote repository 에서 삭제할 branch 이름] 1git push origin --delete feature/test git branch -d [rocal repository 에서 삭제할 branch 이름] 1git branch -d feature/local_test Others수정 이전으로 내용 되돌리기Stage에 들어가지 않은 수정된 파일을 수정 이전(가장 최근 commit)으로 되돌리기, add 하지 않은 상태일 때 가능 1git reset --hard 해당 포스트에 계속 추가 예정","link":"/rustydoor/2023/01/09/Git-%EB%AA%85%EB%A0%B9%EC%96%B4/"}],"tags":[{"name":"git","slug":"git","link":"/rustydoor/tags/git/"}],"categories":[],"pages":[]}